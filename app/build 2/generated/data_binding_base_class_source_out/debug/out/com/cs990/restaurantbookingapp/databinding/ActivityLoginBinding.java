// Generated by view binder compiler. Do not edit!
package com.cs990.restaurantbookingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.cs990.restaurantbookingapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText editEmail;

  @NonNull
  public final TextInputEditText editPassword;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextView loginLabel;

  @NonNull
  public final TextView registerText;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull TextInputEditText editEmail,
      @NonNull TextInputEditText editPassword, @NonNull Button loginButton,
      @NonNull TextView loginLabel, @NonNull TextView registerText) {
    this.rootView = rootView;
    this.editEmail = editEmail;
    this.editPassword = editPassword;
    this.loginButton = loginButton;
    this.loginLabel = loginLabel;
    this.registerText = registerText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editEmail;
      TextInputEditText editEmail = rootView.findViewById(id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.editPassword;
      TextInputEditText editPassword = rootView.findViewById(id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = rootView.findViewById(id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.loginLabel;
      TextView loginLabel = rootView.findViewById(id);
      if (loginLabel == null) {
        break missingId;
      }

      id = R.id.registerText;
      TextView registerText = rootView.findViewById(id);
      if (registerText == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, editEmail, editPassword, loginButton,
          loginLabel, registerText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
